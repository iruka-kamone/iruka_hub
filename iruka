local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local MOVE_SPEED = 300

-- 追尾用透明パーツ
local followPlatform = nil
local currentTween = nil
local followConnection = nil

local function createFollowPlatform(position)
	if followPlatform then
		followPlatform:Destroy()
	end
	followPlatform = Instance.new("Part")
	followPlatform.Size = Vector3.new(4, 1, 4)
	followPlatform.Anchored = true
	followPlatform.CanCollide = false
	followPlatform.Transparency = 1
	followPlatform.Position = position
	followPlatform.Parent = workspace
end

local function destroyFollowPlatform()
	if followPlatform then
		followPlatform:Destroy()
		followPlatform = nil
	end
	if followConnection then
		followConnection:Disconnect()
		followConnection = nil
	end
	if currentTween then
		currentTween:Cancel()
		currentTween = nil
	end
end

-- GUI作成
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FollowGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 360, 0, 270)
mainFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
mainFrame.BackgroundTransparency = 0.4
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Active = true
mainFrame.Draggable = true

local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Size = UDim2.new(1, -80, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Iruka Hub"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

local minButton = Instance.new("TextButton", titleBar)
minButton.Size = UDim2.new(0, 35, 0, 25)
minButton.Position = UDim2.new(1, -75, 0, 2)
minButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
minButton.TextColor3 = Color3.new(1, 1, 1)
minButton.Text = "_"
minButton.Font = Enum.Font.GothamBold
minButton.TextSize = 22

local closeButton = Instance.new("TextButton", titleBar)
closeButton.Size = UDim2.new(0, 35, 0, 25)
closeButton.Position = UDim2.new(1, -35, 0, 2)
closeButton.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Text = "X"
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 22

local contentFrame = Instance.new("Frame", mainFrame)
contentFrame.Size = UDim2.new(1, 0, 1, -30)
contentFrame.Position = UDim2.new(0, 0, 0, 30)
contentFrame.BackgroundTransparency = 1

-- Dropdown to select player
local dropdown = Instance.new("TextButton", contentFrame)
dropdown.Size = UDim2.new(0, 160, 0, 30)
dropdown.Position = UDim2.new(0, 10, 0, 10)
dropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
dropdown.TextColor3 = Color3.new(1, 1, 1)
dropdown.Text = "Select Player"
dropdown.Font = Enum.Font.Gotham
dropdown.TextSize = 14

local dropdownFrame = Instance.new("ScrollingFrame", contentFrame)
dropdownFrame.Size = UDim2.new(0, 160, 0, 120)
dropdownFrame.Position = UDim2.new(0, 10, 0, 40)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
dropdownFrame.Visible = false
dropdownFrame.ClipsDescendants = true
dropdownFrame.BorderSizePixel = 0
dropdownFrame.ScrollBarThickness = 6

local uiListLayout = Instance.new("UIListLayout", dropdownFrame)
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayout.Padding = UDim.new(0, 4)

-- Buttons container on right
local buttonFrame = Instance.new("Frame", contentFrame)
buttonFrame.Size = UDim2.new(0, 160, 0, 180)
buttonFrame.Position = UDim2.new(0, 190, 0, 10)
buttonFrame.BackgroundTransparency = 1

local buttonLayout = Instance.new("UIListLayout", buttonFrame)
buttonLayout.SortOrder = Enum.SortOrder.LayoutOrder
buttonLayout.Padding = UDim.new(0, 4)

-- Button creator
local function makeButton(text, color)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, 0, 0, 30)
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Text = text
	btn.Font = Enum.Font.GothamSemibold
	btn.TextSize = 16
	btn.Parent = buttonFrame
	return btn
end

local refreshButton = makeButton("Refresh", Color3.fromRGB(70, 70, 70))
local moveButton = makeButton("Move: OFF", Color3.fromRGB(70, 70, 70))
local camButton = makeButton("Cam Lock: OFF", Color3.fromRGB(90, 90, 90))
local randomButton = makeButton("Random: OFF", Color3.fromRGB(110, 110, 110))
local sameTeamButton = makeButton("Same Team: OFF", Color3.fromRGB(100, 100, 150))
local randomTypeButton = makeButton("Random Type: Close", Color3.fromRGB(100, 150, 100))

-- State variables
local selectedTarget = nil
local targetBillboard = nil
local targetBoxBillboard = nil
local targetBillboardConnection = nil
local moving = false
local camLock = false
local randomMode = false
local sameTeamEnabled = false
local randomTypeClose = true
local minimized = false

-- Update player list dropdown
local function updatePlayerList()
	dropdownFrame:ClearAllChildren()
	uiListLayout = Instance.new("UIListLayout", dropdownFrame)
	uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	uiListLayout.Padding = UDim.new(0, 4)

	local count = 0

	-- Add 'None' option
	local noneBtn = Instance.new("TextButton", dropdownFrame)
	noneBtn.Size = UDim2.new(1, 0, 0, 30)
	noneBtn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
	noneBtn.TextColor3 = Color3.new(1, 1, 1)
	noneBtn.Text = "None"
	noneBtn.Font = Enum.Font.GothamSemibold
	noneBtn.TextSize = 16
	noneBtn.MouseButton1Click:Connect(function()
		selectedTarget = nil
		dropdown.Text = "Select Player"
		randomMode = false
		updateButtonsText()
	end)
	count += 1

	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= player then
			local btn = Instance.new("TextButton", dropdownFrame)
			btn.Size = UDim2.new(1, 0, 0, 30)
			btn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
			btn.TextColor3 = Color3.new(1, 1, 1)
			btn.Text = plr.Name
			btn.Font = Enum.Font.GothamSemibold
			btn.TextSize = 16

			btn.MouseButton1Click:Connect(function()
				selectedTarget = plr
				dropdown.Text = "Target: " .. plr.Name
				dropdownFrame.Visible = false
				randomMode = false
				updateButtonsText()
			end)
			count += 1
		end
	end
	dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, count * 34)
end

-- Pick random target based on settings
local function pickRandomTarget()
	local candidates = {}
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= player and plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid.Health > 0 then
			if not sameTeamEnabled then
				if player.Team and plr.Team == player.Team then
					-- Skip same team
				else
					table.insert(candidates, plr)
				end
			else
				table.insert(candidates, plr)
			end
		end
	end

	if #candidates == 0 then
		selectedTarget = nil
		dropdown.Text = "Select Player"
		return
	end

	if randomTypeClose then
		-- Close mode: pick closest target, update every 0.1s
		table.sort(candidates, function(a,b)
			if not (a.Character and a.Character:FindFirstChild("HumanoidRootPart")) then return false end
			if not (b.Character and b.Character:FindFirstChild("HumanoidRootPart")) then return true end
			local aPos = a.Character.HumanoidRootPart.Position
			local bPos = b.Character.HumanoidRootPart.Position
			local myPos = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.Position or Vector3.new()
			return (aPos - myPos).Magnitude < (bPos - myPos).Magnitude
		end)
		selectedTarget = candidates[1]
	else
		-- Full mode: pick random target and stay until dead
		if selectedTarget and selectedTarget.Character and selectedTarget.Character:FindFirstChild("Humanoid") and selectedTarget.Character.Humanoid.Health > 0 then
			return -- keep current target alive in full mode
		end
		selectedTarget = candidates[math.random(1,#candidates)]
	end

	if selectedTarget then
		dropdown.Text = "Target: " .. selectedTarget.Name
	end
end

-- Attach red outlined name/distance/hp billboard
local function attachBillboard(target)
	if targetBillboard then
		targetBillboard:Destroy()
		targetBillboard = nil
	end
	if targetBillboardConnection then
		targetBillboardConnection:Disconnect()
		targetBillboardConnection = nil
	end
	if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
		local billboard = Instance.new("BillboardGui")
		billboard.Name = "TargetBillboard"
		billboard.Size = UDim2.new(0.15, 0, 0.08, 0)
		billboard.StudsOffset = Vector3.new(0, 3, 0)
		billboard.AlwaysOnTop = true
		billboard.Parent = target.Character.HumanoidRootPart

		local nameLabel = Instance.new("TextLabel", billboard)
		nameLabel.Size = UDim2.new(0.6, 0, 0.6, 0)
		nameLabel.Position = UDim2.new(0, 0, 0, 0)
		nameLabel.BackgroundTransparency = 1
		nameLabel.TextColor3 = Color3.new(1, 1, 1)
		nameLabel.TextStrokeColor3 = Color3.new(1, 0, 0)
		nameLabel.TextStrokeTransparency = 0
		nameLabel.Font = Enum.Font.GothamBold
		nameLabel.TextSize = 12
		nameLabel.TextXAlignment = Enum.TextXAlignment.Left
		nameLabel.TextYAlignment = Enum.TextYAlignment.Bottom
		nameLabel.Text = target.Name

		local distanceLabel = Instance.new("TextLabel", billboard)
		distanceLabel.Size = UDim2.new(0.35, 0, 0.6, 0)
		distanceLabel.Position = UDim2.new(0.62, 0, 0, 0)
		distanceLabel.BackgroundTransparency = 1
		distanceLabel.TextColor3 = Color3.new(1, 1, 1)
		distanceLabel.TextStrokeColor3 = Color3.new(1, 0, 0)
		distanceLabel.TextStrokeTransparency = 0
		distanceLabel.Font = Enum.Font.GothamBold
		distanceLabel.TextSize = 12
		distanceLabel.TextXAlignment = Enum.TextXAlignment.Right
		distanceLabel.TextYAlignment = Enum.TextYAlignment.Bottom
		distanceLabel.Text = "0 m"

		local hpLabel = Instance.new("TextLabel", billboard)
		hpLabel.Size = UDim2.new(1, 0, 0.4, 0)
		hpLabel.Position = UDim2.new(0, 0, 0.6, 0)
		hpLabel.BackgroundTransparency = 1
		hpLabel.TextColor3 = Color3.new(1, 1, 1)
		hpLabel.TextStrokeColor3 = Color3.new(1, 0, 0)
		hpLabel.TextStrokeTransparency = 0
		hpLabel.Font = Enum.Font.GothamBold
		hpLabel.TextSize = 12
		hpLabel.TextXAlignment = Enum.TextXAlignment.Center
		hpLabel.TextYAlignment = Enum.TextYAlignment.Top
		hpLabel.Text = "HP: 100"

		targetBillboard = billboard

		targetBillboardConnection = RunService.Heartbeat:Connect(function()
			if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
				if targetBillboard then
					targetBillboard:Destroy()
					targetBillboard = nil
				end
				if targetBillboardConnection then
					targetBillboardConnection:Disconnect()
					targetBillboardConnection = nil
				end
				return
			end

			local hrp = target.Character.HumanoidRootPart
			local dist = (hrp.Position - (player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.Position or Vector3.new())).Magnitude
			distanceLabel.Text = string.format("%.1f m", dist)

			local humanoid = target.Character:FindFirstChild("Humanoid")
			if humanoid then
				hpLabel.Text = "HP: " .. math.floor(humanoid.Health)
			else
				hpLabel.Text = "HP: N/A"
			end
		end)
	end
end

-- Attach green box visible through walls
local function attachBox(target)
	if targetBoxBillboard then
		targetBoxBillboard:Destroy()
		targetBoxBillboard = nil
	end
	if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
		local billboard = Instance.new("BillboardGui")
		billboard.Name = "TargetBox"
		billboard.Size = UDim2.new(0.1, 0, 0.1, 0)
		billboard.AlwaysOnTop = true
		billboard.Parent = target.Character.HumanoidRootPart

		local box = Instance.new("Frame", billboard)
		box.Size = UDim2.new(1, 0, 1, 0)
		box.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
		box.BackgroundTransparency = 0.7
		box.BorderColor3 = Color3.fromRGB(0, 100, 0)
		box.BorderSizePixel = 2

		targetBoxBillboard = billboard
	end
end

-- Update UI buttons text for toggles
local function updateButtonsText()
	moveButton.Text = moving and "Move: ON" or "Move: OFF"
	camButton.Text = camLock and "Cam Lock: ON" or "Cam Lock: OFF"
	randomButton.Text = randomMode and "Random: ON" or "Random: OFF"
	sameTeamButton.Text = sameTeamEnabled and "Same Team: ON" or "Same Team: OFF"
	randomTypeButton.Text = randomTypeClose and "Random Type: Close" or "Random Type: Full"
end

updatePlayerList()
updateButtonsText()

-- Button click events
dropdown.MouseButton1Click:Connect(function()
	dropdownFrame.Visible = not dropdownFrame.Visible
end)

refreshButton.MouseButton1Click:Connect(function()
	updatePlayerList()
end)

moveButton.MouseButton1Click:Connect(function()
	moving = not moving
	updateButtonsText()
end)

camButton.MouseButton1Click:Connect(function()
	camLock = not camLock
	updateButtonsText()
end)

randomButton.MouseButton1Click:Connect(function()
	randomMode = not randomMode
	if randomMode then
		pickRandomTarget()
	end
	updateButtonsText()
end)

sameTeamButton.MouseButton1Click:Connect(function()
	sameTeamEnabled = not sameTeamEnabled
	updateButtonsText()
end)

randomTypeButton.MouseButton1Click:Connect(function()
	randomTypeClose = not randomTypeClose
	updateButtonsText()
end)

minButton.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		dropdownFrame.Visible = false
		TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 360, 0, 30)}):Play()
		minButton.Text = "▢"
	else
		TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 360, 0, 270)}):Play()
		minButton.Text = "_"
	end
end)

closeButton.MouseButton1Click:Connect(function()
	screenGui:Destroy()
	destroyFollowPlatform()
end)

-- Tweenでなめらか追尾処理
local function teleportTo(position)
	if not player.Character then return end
	local hrp = player.Character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	if not followPlatform or not followPlatform.Parent then
		createFollowPlatform(hrp.Position - Vector3.new(0, 2.5, 0))
	end

	if currentTween then
		currentTween:Cancel()
		currentTween = nil
	end
	if followConnection then
		followConnection:Disconnect()
		followConnection = nil
	end

	local distance = (position - followPlatform.Position).Magnitude
	local time = distance / MOVE_SPEED
	time = math.clamp(time, 0.1, 10)

	currentTween = TweenService:Create(followPlatform, TweenInfo.new(time, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Position = position})

	followConnection = RunService.RenderStepped:Connect(function()
		if followPlatform and followPlatform.Parent and hrp.Parent then
			hrp.CFrame = followPlatform.CFrame + Vector3.new(0, 2.5, 0)
		end
	end)

	currentTween:Play()
	currentTween.Completed:Connect(function()
		if followConnection then
			followConnection:Disconnect()
			followConnection = nil
		end
	end)
end

-- CamLock処理
RunService.Heartbeat:Connect(function()
	if camLock and selectedTarget and selectedTarget.Character and selectedTarget.Character:FindFirstChild("HumanoidRootPart") then
		local hrp = selectedTarget.Character.HumanoidRootPart
		local cam = workspace.CurrentCamera
		cam.CFrame = CFrame.new(cam.CFrame.Position, hrp.Position)
	end
end)

-- Main loop
RunService.Heartbeat:Connect(function()
	if randomMode then
		if randomTypeClose then
			pickRandomTarget()
		else
			-- full random target remains until dead, handled in pickRandomTarget()
		end
	end

	if moving and selectedTarget and selectedTarget.Character and selectedTarget.Character:FindFirstChild("HumanoidRootPart") then
		local targetPos = selectedTarget.Character.HumanoidRootPart.Position - Vector3.new(0, 3, 0)
		teleportTo(targetPos)
	else
		destroyFollowPlatform()
	end

	attachBillboard(selectedTarget)
	attachBox(selectedTarget)
end)
