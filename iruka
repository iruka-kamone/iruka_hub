local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local MOVE_SPEED = 300

local followBlock = Instance.new("Part", workspace)
followBlock.Name = "FollowBlock"
followBlock.Anchored = true
followBlock.CanCollide = false
followBlock.Transparency = 1
followBlock.Size = Vector3.new(2,2,2)

local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "FollowGui"

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 360, 0, 310) -- 高さ少し増やしてボタン追加分確保
mainFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(15,15,15)
mainFrame.BackgroundTransparency = 0.4
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Active = true
mainFrame.Draggable = true

local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1,0,0,30)
titleBar.BackgroundColor3 = Color3.fromRGB(25,25,25)

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Size = UDim2.new(1, -80, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "iruka hub"
titleLabel.TextColor3 = Color3.new(1,1,1)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

local minButton = Instance.new("TextButton", titleBar)
minButton.Size = UDim2.new(0, 35, 0, 25)
minButton.Position = UDim2.new(1, -75, 0, 2)
minButton.BackgroundColor3 = Color3.fromRGB(60,60,60)
minButton.TextColor3 = Color3.new(1,1,1)
minButton.Text = "_"
minButton.Font = Enum.Font.GothamBold
minButton.TextSize = 22

local closeButton = Instance.new("TextButton", titleBar)
closeButton.Size = UDim2.new(0, 35, 0, 25)
closeButton.Position = UDim2.new(1, -35, 0, 2)
closeButton.BackgroundColor3 = Color3.fromRGB(180,50,50)
closeButton.TextColor3 = Color3.new(1,1,1)
closeButton.Text = "×"
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 22

local contentFrame = Instance.new("Frame", mainFrame)
contentFrame.Size = UDim2.new(1, 0, 1, -30)
contentFrame.Position = UDim2.new(0, 0, 0, 30)
contentFrame.BackgroundTransparency = 1

-- ドロップダウン
local dropdown = Instance.new("TextButton", contentFrame)
dropdown.Size = UDim2.new(0, 160, 0, 30)
dropdown.Position = UDim2.new(0, 10, 0, 10)
dropdown.BackgroundColor3 = Color3.fromRGB(40,40,40)
dropdown.TextColor3 = Color3.new(1,1,1)
dropdown.Text = "プレイヤーを選択"
dropdown.Font = Enum.Font.Gotham
dropdown.TextSize = 14

local dropdownFrame = Instance.new("ScrollingFrame", contentFrame)
dropdownFrame.Size = UDim2.new(0, 160, 0, 120)
dropdownFrame.Position = UDim2.new(0, 10, 0, 40)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
dropdownFrame.Visible = false
dropdownFrame.ClipsDescendants = true
dropdownFrame.BorderSizePixel = 0
dropdownFrame.ScrollBarThickness = 6

local uiListLayout = Instance.new("UIListLayout", dropdownFrame)
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayout.Padding = UDim.new(0,4)

-- 右側ボタン配置用Frame
local buttonFrame = Instance.new("Frame", contentFrame)
buttonFrame.Size = UDim2.new(0, 160, 0, 250) -- 少し高さ増やしてボタン追加分確保
buttonFrame.Position = UDim2.new(0, 190, 0, 10)
buttonFrame.BackgroundTransparency = 1

local buttonLayout = Instance.new("UIListLayout", buttonFrame)
buttonLayout.SortOrder = Enum.SortOrder.LayoutOrder
buttonLayout.Padding = UDim.new(0,4)

-- ボタン作成関数
local function makeButton(text, color)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, 0, 0, 30)
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.new(1,1,1)
	btn.Text = text
	btn.Font = Enum.Font.GothamSemibold
	btn.TextSize = 16
	btn.Parent = buttonFrame
	return btn
end

local refreshButton = makeButton("更新", Color3.fromRGB(70,70,70))
local moveButton = makeButton("移動: OFF", Color3.fromRGB(70,70,70))
local camButton = makeButton("カメラロック: OFF", Color3.fromRGB(90,90,90))
local randomButton = makeButton("ランダム: OFF", Color3.fromRGB(110,110,110))
local includeTeamButton = makeButton("同チームも対象: OFF", Color3.fromRGB(70,70,70))
local randomTypeButton = makeButton("選択: 完全ランダム", Color3.fromRGB(70,70,70))

-- 状態
local selectedTarget = nil
local targetBillboard = nil
local targetBoxBillboard = nil
local moving = false
local camLock = false
local randomMode = false
local includeSameTeam = false
local randomModeType = "random" -- "random" or "nearest"
local currentTween = nil
local minimized = false

-- プレイヤーリスト更新
local function updatePlayerList()
	dropdownFrame:ClearAllChildren()
	uiListLayout = Instance.new("UIListLayout", dropdownFrame)
	uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	uiListLayout.Padding = UDim.new(0,4)

	local count = 0
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= player then
			local btn = Instance.new("TextButton", dropdownFrame)
			btn.Size = UDim2.new(1, 0, 0, 30)
			btn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
			btn.TextColor3 = Color3.new(1, 1, 1)
			btn.Text = plr.Name
			btn.Font = Enum.Font.GothamSemibold
			btn.TextSize = 16

			btn.MouseButton1Click:Connect(function()
				selectedTarget = plr
				dropdown.Text = "対象: " .. plr.Name
				dropdownFrame.Visible = false
				randomMode = false
				randomButton.Text = "ランダム: OFF"
			end)
			count += 1
		end
	end
	dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, count * 34)
end

-- ランダムターゲット選択
local function pickRandomTarget()
	local candidates = {}
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= player and plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid.Health > 0 then
			if includeSameTeam or (not includeSameTeam and (not plr.Team or plr.Team ~= player.Team)) then
				table.insert(candidates, plr)
			end
		end
	end
	if #candidates == 0 then
		selectedTarget = nil
		dropdown.Text = "対象なし"
		return
	end

	if randomModeType == "random" then
		selectedTarget = candidates[math.random(1, #candidates)]
	elseif randomModeType == "nearest" then
		table.sort(candidates, function(a,b)
			local aPos = a.Character.HumanoidRootPart.Position
			local bPos = b.Character.HumanoidRootPart.Position
			local pPos = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.Position or Vector3.new()
			return (aPos - pPos).Magnitude < (bPos - pPos).Magnitude
		end)
		selectedTarget = candidates[1]
	end

	dropdown.Text = "対象: " .. selectedTarget.Name
end

-- 赤い輪郭つきの名前・距離・HP表示＆緑の箱（壁越し見えるBillboardGui）
local function attachBillboard(target)
	if targetBillboard then
		targetBillboard:Destroy()
		targetBillboard = nil
	end
	if targetBoxBillboard then
		targetBoxBillboard:Destroy()
		targetBoxBillboard = nil
	end
	if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
		-- 名前距離HPのBillboardGui
		local billboard = Instance.new("BillboardGui")
		billboard.Name = "TargetInfoBillboard"
		billboard.Size = UDim2.new(0, 140, 0, 50)
		billboard.AlwaysOnTop = true
		billboard.StudsOffset = Vector3.new(0, 3, 0)
		billboard.Parent = target.Character.HumanoidRootPart

		-- 輪郭ラベル（赤）
		local outlineLabel = Instance.new("TextLabel", billboard)
		outlineLabel.Size = UDim2.new(1,0,1,0)
		outlineLabel.BackgroundTransparency = 1
		outlineLabel.TextColor3 = Color3.fromRGB(200,0,0)
		outlineLabel.TextStrokeColor3 = Color3.fromRGB(200,0,0)
		outlineLabel.TextStrokeTransparency = 0
		outlineLabel.Font = Enum.Font.GothamBold
		outlineLabel.TextSize = 16
		outlineLabel.Text = target.Name
		outlineLabel.TextXAlignment = Enum.TextXAlignment.Center
		outlineLabel.TextYAlignment = Enum.TextYAlignment.Top
		outlineLabel.ZIndex = 1

		-- メインテキスト（白）
		local mainLabel = Instance.new("TextLabel", billboard)
		mainLabel.Size = UDim2.new(1,0,1,0)
		mainLabel.BackgroundTransparency = 1
		mainLabel.TextColor3 = Color3.new(1,1,1)
		mainLabel.TextStrokeColor3 = Color3.fromRGB(200,0,0)
		mainLabel.TextStrokeTransparency = 0
		mainLabel.Font = Enum.Font.GothamBold
		mainLabel.TextSize = 16
		mainLabel.Text = target.Name
		mainLabel.TextXAlignment = Enum.TextXAlignment.Center
		mainLabel.TextYAlignment = Enum.TextYAlignment.Top
		mainLabel.ZIndex = 2

		-- 距離ラベル（右側上寄せ）
		local distanceLabel = Instance.new("TextLabel", billboard)
		distanceLabel.Size = UDim2.new(0, 50, 0, 20)
		distanceLabel.Position = UDim2.new(1, 5, 0, 0)
		distanceLabel.BackgroundTransparency = 1
		distanceLabel.TextColor3 = Color3.new(1,1,1)
		distanceLabel.TextStrokeColor3 = Color3.fromRGB(200,0,0)
		distanceLabel.TextStrokeTransparency = 0
		distanceLabel.Font = Enum.Font.GothamBold
		distanceLabel.TextSize = 14
		distanceLabel.Text = "0"
		distanceLabel.TextXAlignment = Enum.TextXAlignment.Center
		distanceLabel.TextYAlignment = Enum.TextYAlignment.Top
		distanceLabel.ZIndex = 2

		-- HPラベル（名前の下）
		local hpLabel = Instance.new("TextLabel", billboard)
		hpLabel.Size = UDim2.new(1, 0, 0, 20)
		hpLabel.Position = UDim2.new(0, 0, 0, 25)
		hpLabel.BackgroundTransparency = 1
		hpLabel.TextColor3 = Color3.new(1,1,1)
		hpLabel.TextStrokeColor3 = Color3.fromRGB(200,0,0)
		hpLabel.TextStrokeTransparency = 0
		hpLabel.Font = Enum.Font.GothamBold
		hpLabel.TextSize = 14
		hpLabel.Text = "HP: 0"
		hpLabel.TextXAlignment = Enum.TextXAlignment.Center
		hpLabel.ZIndex = 2

		targetBillboard = billboard

		-- 緑の箱BillboardGui（壁越しでも見える）
		local boxBillboard = Instance.new("BillboardGui")
		boxBillboard.Name = "TargetBoxBillboard"
		boxBillboard.Size = UDim2.new(0, 20, 0, 20)
		boxBillboard.AlwaysOnTop = false
		boxBillboard.ExtentsOffset = Vector3.new(0, -1, 0)
		boxBillboard.Parent = target.Character.HumanoidRootPart

		local boxFrame = Instance.new("Frame", boxBillboard)
		boxFrame.Size = UDim2.new(1,0,1,0)
		boxFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
		boxFrame.BackgroundTransparency = 0.6
		boxFrame.BorderSizePixel = 0
		boxFrame.ZIndex = 1

		targetBoxBillboard = boxBillboard

		-- 毎フレーム更新
		if targetBillboardConnection then
			targetBillboardConnection:Disconnect()
			targetBillboardConnection = nil
		end
		targetBillboardConnection = RunService.Heartbeat:Connect(function()
			if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local distM = math.floor((target.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude)
				distanceLabel.Text = tostring(distM) .. "m"

				local humanoid = target.Character:FindFirstChild("Humanoid")
				if humanoid then
					hpLabel.Text = string.format("HP: %d / %d", math.floor(humanoid.Health), math.floor(humanoid.MaxHealth))
				else
					hpLabel.Text = "HP: 0 / 0"
				end
			else
				if targetBillboard then
					targetBillboard:Destroy()
					targetBillboard = nil
				end
				if targetBoxBillboard then
					targetBoxBillboard:Destroy()
					targetBoxBillboard = nil
				end
				if targetBillboardConnection then
					targetBillboardConnection:Disconnect()
					targetBillboardConnection = nil
				end
			end
		end)
	end
end

local targetBillboardConnection = nil

updatePlayerList()

-- ボタン動作
dropdown.MouseButton1Click:Connect(function()
	dropdownFrame.Visible = not dropdownFrame.Visible
end)

refreshButton.MouseButton1Click:Connect(function()
	updatePlayerList()
end)

moveButton.MouseButton1Click:Connect(function()
	moving = not moving
	moveButton.Text = moving and "移動: ON" or "移動: OFF"
end)

camButton.MouseButton1Click:Connect(function()
	camLock = not camLock
	camButton.Text = camLock and "カメラロック: ON" or "カメラロック: OFF"
end)

randomButton.MouseButton1Click:Connect(function()
	randomMode = not randomMode
	randomButton.Text = randomMode and "ランダム: ON" or "ランダム: OFF"
	if randomMode then
		pickRandomTarget()
	end
end)

includeTeamButton.MouseButton1Click:Connect(function()
	includeSameTeam = not includeSameTeam
	includeTeamButton.Text = includeSameTeam and "同チームも対象: ON" or "同チームも対象: OFF"
end)

randomTypeButton.MouseButton1Click:Connect(function()
	if randomModeType == "random" then
		randomModeType = "nearest"
		randomTypeButton.Text = "選択: 近い順"
	else
		randomModeType = "random"
		randomTypeButton.Text = "選択: 完全ランダム"
	end
end)

minButton.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		dropdownFrame.Visible = false
		TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0,360,0,30)}):Play()
		minButton.Text = "▢"
	else
		TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0,360,0,310)}):Play()
		minButton.Text = "_"
	end
end)

closeButton.MouseButton1Click:Connect(function()
	screenGui:Destroy()
	followBlock:Destroy()
	if targetBillboardConnection then
		targetBillboardConnection:Disconnect()
		targetBillboardConnection = nil
	end
end)

-- 動作ループ
RunService.Heartbeat:Connect(function()
	-- Billboard更新
	if selectedTarget and selectedTarget.Character and selectedTarget.Character:FindFirstChild("Humanoid") and selectedTarget.Character.Humanoid.Health > 0 then
		if not targetBillboard or targetBillboard.Parent ~= selectedTarget.Character.HumanoidRootPart then
			attachBillboard(selectedTarget)
		end
	else
		if targetBillboard then
			targetBillboard:Destroy()
			targetBillboard = nil
		end
		if targetBoxBillboard then
			targetBoxBillboard:Destroy()
			targetBoxBillboard = nil
		end
		if targetBillboardConnection then
			targetBillboardConnection:Disconnect()
			targetBillboardConnection = nil
		end
	end

	-- ランダムモードのときターゲットが死んだら次を選ぶ
	if randomMode and (not selectedTarget or not selectedTarget.Character or not selectedTarget.Character:FindFirstChild("Humanoid") or selectedTarget.Character.Humanoid.Health <= 0) then
		pickRandomTarget()
	end

	-- 移動処理
	if moving and selectedTarget and selectedTarget.Character and selectedTarget.Character:FindFirstChild("Humanoid") and selectedTarget.Character.Humanoid.Health > 0 and player.Character then
		local root = player.Character:FindFirstChild("HumanoidRootPart")
		local targetRoot = selectedTarget.Character:FindFirstChild("HumanoidRootPart")
		if root and targetRoot then
			if currentTween then
				currentTween:Cancel()
				currentTween = nil
			end
			local dist = (targetRoot.Position - followBlock.Position).Magnitude
			local time = dist / MOVE_SPEED
			currentTween = TweenService:Create(followBlock, TweenInfo.new(time, Enum.EasingStyle.Linear), {Position = targetRoot.Position})
			currentTween:Play()
			root.CFrame = followBlock.CFrame
		end
	elseif not moving and currentTween then
		currentTween:Cancel()
		currentTween = nil
	end

	-- カメラロック
	if camLock and selectedTarget and selectedTarget.Character and selectedTarget.Character:FindFirstChild("Humanoid") and selectedTarget.Character.Humanoid.Health > 0 and camera then
		local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		local targetRoot = selectedTarget.Character:FindFirstChild("HumanoidRootPart")
		if root and targetRoot then
			local lookVector = (targetRoot.Position - root.Position).Unit
			local currentPos = camera.CFrame.Position
			camera.CFrame = CFrame.new(currentPos, currentPos + lookVector)
		end
	end
end)

